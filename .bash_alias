# Various aliases
#
# - ABorgna

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p' # -> Prevents accidentally clobbering files.

alias h='history'
alias j='jobs -l'
alias ..='cd ..'
alias cls='clear' # C-l works too if you are not in tmux

# Conditional aliases (defaults must be escaped or else the alias will be called)
alias vim='runDefault nvim \\vim'

# Tmux
alias tm='~/.dots/bin/tm'
alias ta='tmux attach'
alias tns='tmux new-session -s'

# Pretty-print of some PATH variables:
alias path='echo -e ${PATH//:/\\n}'
alias libpath='echo -e ${LD_LIBRARY_PATH//:/\\n}'

# Makes a more readable output.
alias du='du -kh'
alias df='df -kTh'
alias free='free -h'
alias dd='dd status=progress'

# Compilers
function rung++ () { g++ -g -O2 -std=gnu++11 -o /tmp/$1.o $1 && /tmp/$1.o; }

# Randoms
alias cloak='history -d $((HISTCMD-1)) &&'
alias c='cloak'
alias clk='tty-clock -c -C 7 -d 40000000'
alias ftn='fortune -ac'
alias music='ncmpcpp'
alias mpdrestart='sudo mpd --kill; mpd'
alias tt='sublimetext'
alias weather='weather -m SABE'
alias minicom='minicom -c'
alias cal='cal -3'

# The ls family
#   Add colors for filetype and  human-readable sizes
alias l='command ls -hp --color --group-directories-first'
#   Directories first, with alphanumeric sorting:
alias ll='l -lAcv'
alias ls="l -lv"
alias la='l -A'           #  Show hidden files.
alias lx='l -lXB'         #  Sort by extension.
alias lk='l -lSr'         #  Sort by size, biggest last.
alias lt='l -ltr'         #  Sort by date, most recent last.
alias lc='l -ltcr'        #  Sort by/show change time,most recent last.
alias lu='l -ltur'        #  Sort by/show access time,most recent last.
alias lr='ll -R'           #  Recursive ls.
alias tree='tree -Csuh'    #  Nice alternative to 'recursive ls' ...

# Swap key bindings
alias aoe='setxkbmap us intl'
alias asd='setxkbmap us dvp -option "ctrl:nocaps,compose:rwin"'

# Use ghc installed by stack
alias ghc='stack ghc'
alias ghci='stack ghci'
alias bazelt='bazel test --test_output=streamed'

function ghciwith () {
    nix-shell -p "haskellPackages.ghcWithPackages (pkgs: with pkgs; [$*])" --run ghci
}

# Wine
alias wine64='WINEARCH=win64 WINEPREFIX=~/.wine64 wine'

# Proxy things
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
        echo "Proxy environment variable set."
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    export HTTP_PROXY=$http_proxy
    export HTTPS_PROXY=$http_proxy
    export FTP_PROXY=$http_proxy
    export RSYNC_PROXY=$http_proxy
}

function proxy_off(){
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    echo -e "Proxy environment variable removed."
}

